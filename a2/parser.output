State 17 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: expr TOKEN_SEMI

    2 expr: expr TOKEN_PLUS expr
    3     | expr TOKEN_MINUS term
    4     | term

    5 term: term TOKEN_MUL factor
    6     | term TOKEN_DIV factor
    7     | factor

    8 factor: TOKEN_MINUS factor
    9       | TOKEN_LPAREN expr TOKEN_RPAREN
   10       | TOKEN_INTEGER_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_INTEGER_LITERAL (258) 10
TOKEN_PLUS (259) 2
TOKEN_MINUS (260) 3 8
TOKEN_MUL (261) 5
TOKEN_DIV (262) 6
TOKEN_LPAREN (263) 9
TOKEN_RPAREN (264) 9
TOKEN_SEMI (265) 1


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
program (12)
    on left: 1, on right: 0
expr (13)
    on left: 2 3 4, on right: 1 2 3 9
term (14)
    on left: 5 6 7, on right: 3 4 5 6
factor (15)
    on left: 8 9 10, on right: 5 6 7 8


State 0

    0 $accept: . program $end

    TOKEN_INTEGER_LITERAL  shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 2
    TOKEN_LPAREN           shift, and go to state 3

    program  go to state 4
    expr     go to state 5
    term     go to state 6
    factor   go to state 7


State 1

   10 factor: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 10 (factor)


State 2

    8 factor: TOKEN_MINUS . factor

    TOKEN_INTEGER_LITERAL  shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 2
    TOKEN_LPAREN           shift, and go to state 3

    factor  go to state 8


State 3

    9 factor: TOKEN_LPAREN . expr TOKEN_RPAREN

    TOKEN_INTEGER_LITERAL  shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 2
    TOKEN_LPAREN           shift, and go to state 3

    expr    go to state 9
    term    go to state 6
    factor  go to state 7


State 4

    0 $accept: program . $end

    $end  shift, and go to state 10


State 5

    1 program: expr . TOKEN_SEMI
    2 expr: expr . TOKEN_PLUS expr
    3     | expr . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 11
    TOKEN_MINUS  shift, and go to state 12
    TOKEN_SEMI   shift, and go to state 13


State 6

    4 expr: term .
    5 term: term . TOKEN_MUL factor
    6     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 14
    TOKEN_DIV  shift, and go to state 15

    $default  reduce using rule 4 (expr)


State 7

    7 term: factor .

    $default  reduce using rule 7 (term)


State 8

    8 factor: TOKEN_MINUS factor .

    $default  reduce using rule 8 (factor)


State 9

    2 expr: expr . TOKEN_PLUS expr
    3     | expr . TOKEN_MINUS term
    9 factor: TOKEN_LPAREN expr . TOKEN_RPAREN

    TOKEN_PLUS    shift, and go to state 11
    TOKEN_MINUS   shift, and go to state 12
    TOKEN_RPAREN  shift, and go to state 16


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 expr: expr TOKEN_PLUS . expr

    TOKEN_INTEGER_LITERAL  shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 2
    TOKEN_LPAREN           shift, and go to state 3

    expr    go to state 17
    term    go to state 6
    factor  go to state 7


State 12

    3 expr: expr TOKEN_MINUS . term

    TOKEN_INTEGER_LITERAL  shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 2
    TOKEN_LPAREN           shift, and go to state 3

    term    go to state 18
    factor  go to state 7


State 13

    1 program: expr TOKEN_SEMI .

    $default  reduce using rule 1 (program)


State 14

    5 term: term TOKEN_MUL . factor

    TOKEN_INTEGER_LITERAL  shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 2
    TOKEN_LPAREN           shift, and go to state 3

    factor  go to state 19


State 15

    6 term: term TOKEN_DIV . factor

    TOKEN_INTEGER_LITERAL  shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 2
    TOKEN_LPAREN           shift, and go to state 3

    factor  go to state 20


State 16

    9 factor: TOKEN_LPAREN expr TOKEN_RPAREN .

    $default  reduce using rule 9 (factor)


State 17

    2 expr: expr . TOKEN_PLUS expr
    2     | expr TOKEN_PLUS expr .
    3     | expr . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 11
    TOKEN_MINUS  shift, and go to state 12

    TOKEN_PLUS   [reduce using rule 2 (expr)]
    TOKEN_MINUS  [reduce using rule 2 (expr)]
    $default     reduce using rule 2 (expr)


State 18

    3 expr: expr TOKEN_MINUS term .
    5 term: term . TOKEN_MUL factor
    6     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 14
    TOKEN_DIV  shift, and go to state 15

    $default  reduce using rule 3 (expr)


State 19

    5 term: term TOKEN_MUL factor .

    $default  reduce using rule 5 (term)


State 20

    6 term: term TOKEN_DIV factor .

    $default  reduce using rule 6 (term)
