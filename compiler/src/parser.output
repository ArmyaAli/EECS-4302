Terminals unused in grammar

   TOKEN_SEMICOLON
   TOKEN_DIGIT
   TOKEN_CHARACTER_LITERAL
   TOKEN_INTEGER_ASSINGMENT
   TOKEN_BOOLEAN_ASSIGNMENT
   TOKEN_CHARACTER_ASSIGNMENT
   TOKEN_STRING_ASSIGNMENT
   TOKEN_STRING_LITERAL
   TOKEN_INTEGER_ARRAY
   TOKEN_BOOLEAN_ARRAY
   TOKEN_CHARACTER_ARRAY
   TOKEN_STRING_ARRAY
   TOKEN_ARRAY
   TOKEN_BOOLEAN
   TOKEN_CHAR
   TOKEN_ELSE
   TOKEN_FALSE
   TOKEN_FOR
   TOKEN_FUNCTION
   TOKEN_IF
   TOKEN_INTEGER_LITERAL
   TOKEN_PRINT
   TOKEN_RETURN
   TOKEN_STRING
   TOKEN_TRUE
   TOKEN_VOID
   TOKEN_WHILE
   TOKEN_IDENTIFIER
   TOKEN_GE
   TOKEN_LE
   TOKEN_EQ
   TOKEN_NEQ
   TOKEN_GT
   TOKEN_LT
   TOKEN_MOD
   TOKEN_DIV
   TOKEN_MUL
   TOKEN_SUB
   TOKEN_DECR
   TOKEN_INCR
   TOKEN_EXP
   TOKEN_ASSIGNMENT
   TOKEN_LPAREN
   TOKEN_RPAREN
   TOKEN_OPEN_CURLY_BRACE
   TOKEN_CLOSE_CURLY_BRACE
   TOKEN_OPEN_SQUARE_BRACE
   TOKEN_CLOSE_SQUARE_BRACE
   TOKEN_COMMA
   TOKEN_TYPE_ASSIGNMENT
   TOKEN_LOGICAL_AND
   TOKEN_LOGICAL_OR
   TOKEN_ERROR


Grammar

    0 $accept: expr TOKEN_EOF

    1 expr: TOKEN_ADD


Terminals, with rules where they appear

TOKEN_EOF (0) 0
TOKEN_SEMICOLON (1)
TOKEN_DIGIT (2)
TOKEN_CHARACTER_LITERAL (3)
TOKEN_INTEGER_ASSINGMENT (4)
TOKEN_BOOLEAN_ASSIGNMENT (5)
TOKEN_CHARACTER_ASSIGNMENT (6)
TOKEN_STRING_ASSIGNMENT (7)
TOKEN_STRING_LITERAL (8)
TOKEN_INTEGER_ARRAY (9)
TOKEN_BOOLEAN_ARRAY (10)
TOKEN_CHARACTER_ARRAY (11)
TOKEN_STRING_ARRAY (12)
TOKEN_ARRAY (13)
TOKEN_BOOLEAN (14)
TOKEN_CHAR (15)
TOKEN_ELSE (16)
TOKEN_FALSE (17)
TOKEN_FOR (18)
TOKEN_FUNCTION (19)
TOKEN_IF (20)
TOKEN_INTEGER_LITERAL (21)
TOKEN_PRINT (22)
TOKEN_RETURN (23)
TOKEN_STRING (24)
TOKEN_TRUE (25)
TOKEN_VOID (26)
TOKEN_WHILE (27)
TOKEN_IDENTIFIER (28)
TOKEN_GE (29)
TOKEN_LE (30)
TOKEN_EQ (31)
TOKEN_NEQ (32)
TOKEN_GT (33)
TOKEN_LT (34)
TOKEN_MOD (35)
TOKEN_DIV (36)
TOKEN_MUL (37)
TOKEN_ADD (38) 1
TOKEN_SUB (39)
TOKEN_DECR (40)
TOKEN_INCR (41)
TOKEN_EXP (42)
TOKEN_ASSIGNMENT (43)
TOKEN_LPAREN (44)
TOKEN_RPAREN (45)
TOKEN_OPEN_CURLY_BRACE (46)
TOKEN_CLOSE_CURLY_BRACE (47)
TOKEN_OPEN_SQUARE_BRACE (48)
TOKEN_CLOSE_SQUARE_BRACE (49)
TOKEN_COMMA (50)
TOKEN_TYPE_ASSIGNMENT (51)
TOKEN_LOGICAL_AND (52)
TOKEN_LOGICAL_OR (53)
TOKEN_ERROR (54)
error (256)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
expr (58)
    on left: 1, on right: 0


State 0

    0 $accept: . expr TOKEN_EOF

    TOKEN_ADD  shift, and go to state 1

    expr  go to state 2


State 1

    1 expr: TOKEN_ADD .

    $default  reduce using rule 1 (expr)


State 2

    0 $accept: expr . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 3


State 3

    0 $accept: expr TOKEN_EOF .

    $default  accept
